@{
    Layout = null;
    var title = ViewData["Title"] as string ?? "Yönetim";
    var userName = User?.Identity?.IsAuthenticated == true ? User.Identity.Name : "Kullanıcı";
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@title · Admin</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />

    
</head>
<body class="">
    <div class="admin-shell">
        <header class="topbar glass border-bottom">
            @await Html.PartialAsync("_Topbar")
        </header>

        <aside class="sidebar bg-white d-none d-lg-block">
            @await Html.PartialAsync("_Sidebar")
        </aside>

        <main class="content">
            <div class="container-admin">
                @RenderBody()
            </div>
        </main>
    </div>

    @await Html.PartialAsync("_Toast")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Sidebar toggle (desktop: collapse, mobile: offcanvas hissiyatı)
        (function(){
            const key = 'admin.sidebar.collapsed';
            const root = document.body;
            const mq = window.matchMedia('(min-width: 992px)');
            const apply = ()=> {
                if(mq.matches){
                    if(localStorage.getItem(key)==='1') root.classList.add('sidebar-collapsed'); else root.classList.remove('sidebar-collapsed');
                    root.classList.remove('sidebar-open');
                }else{
                    root.classList.remove('sidebar-collapsed');
                }
            };
            window.addEventListener('resize', apply); apply();
            window.toggleSidebar = function(){
                if(mq.matches){
                    const next = !(localStorage.getItem(key)==='1');
                    localStorage.setItem(key, next ? '1' : '0'); apply();
                }else{
                    root.classList.toggle('sidebar-open');
                }
            }
        })();

        // Global: Kapak önizleme helper (Create/Edit sayfalarında kullanılıyor)
        function bindHeroPreview(inputId, imgId){
            const i = document.getElementById(inputId), img = document.getElementById(imgId);
            if(!i || !img) return;
            i.addEventListener('change', e=>{
                const f = i.files?.[0]; if(!f) return; const r=new FileReader();
                r.onload = ev => img.src = ev.target.result; r.readAsDataURL(f);
            });
        }

        // TempData toastlarını göster
        document.querySelectorAll('.toast.auto').forEach(t=> new bootstrap.Toast(t,{delay:3000}).show());
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
